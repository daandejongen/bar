[{"path":"https://daandejongen.github.io/hystar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Daan de Jong Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://daandejongen.github.io/hystar/articles/hystar.html","id":"the-hysteretic-threshold-autoregressive-hystar-model","dir":"Articles","previous_headings":"","what":"The Hysteretic Threshold Autoregressive (HysTAR) model","title":"hystar","text":"Hysteretic Threshold Autoregressive (HysTAR) model discrete time-series model.","code":"library(hystar)"},{"path":"https://daandejongen.github.io/hystar/articles/hystar.html","id":"the-controlthreshold-variable-z","dir":"Articles","previous_headings":"","what":"The control/threshold variable \\(z\\)","title":"hystar","text":"control variable…","code":"control_variable <- z_sim(n_t = 100, n_switches = 4)"},{"path":"https://daandejongen.github.io/hystar/articles/hystar.html","id":"the-outcome-variable-y","dir":"Articles","previous_headings":"","what":"The outcome variable \\(y\\)","title":"hystar","text":"outcome variable…","code":""},{"path":"https://daandejongen.github.io/hystar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daan de Jong. Author, maintainer, copyright holder. European Research Council. Funder.","code":""},{"path":"https://daandejongen.github.io/hystar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de Jong D (2023). hystar: Fit Hysteretic Threshold Autoregressive Model. R package version 1.1.0,  https://daandejongen.github.io/hystar/, https://github.com/daandejongen/hystar/.","code":"@Manual{,   title = {hystar: Fit the Hysteretic Threshold Autoregressive Model},   author = {Daan {de Jong}},   year = {2023},   note = {R package version 1.1.0,  https://daandejongen.github.io/hystar/},   url = {https://github.com/daandejongen/hystar/}, }"},{"path":"https://daandejongen.github.io/hystar/index.html","id":"simulation-and-estimation-of-the-hysteretic-tar-model","dir":"","previous_headings":"","what":"Fit the Hysteretic Threshold Autoregressive Model","title":"Fit the Hysteretic Threshold Autoregressive Model","text":"hystar package allows simulate estimate hysteretic threshold autoregressive (HysTAR) model. package three main functions: z_sim simulates treshold variable. can choose many times system switch regimes, hystar_sim simulates outcome variable according HysTAR model, hystar_fit estimates model parameters conditional least squares method. hystar package also plot() method combines threshold outcome variable one figure visualizes regimes thresholds.","code":""},{"path":"https://daandejongen.github.io/hystar/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Fit the Hysteretic Threshold Autoregressive Model","text":"can install hystar-package via CRAN running: install.packages(\"hystar\")","code":""},{"path":"https://daandejongen.github.io/hystar/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Fit the Hysteretic Threshold Autoregressive Model","text":"","code":"z <- z_sim(n_t = 200, n_switches = 5) sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1) fit <- hystar_fit(sim$data)"},{"path":"https://daandejongen.github.io/hystar/index.html","id":"cite","dir":"","previous_headings":"","what":"Cite","title":"Fit the Hysteretic Threshold Autoregressive Model","text":"used package academic publication, please cite : De Jong, D. (2022). hystar: Simulation Estimation Hysteretic TAR Model. R package version 0.0.9, https://github.com/daandejongen/hystar/. BibTeX:","code":"@Manual{,     title = {hystar: Simulation and Estimation of the Hysteretic TAR Model},     author = {Daan {de Jong}},     year = {2022},     note = {R package version 0.0.9},     url = {https://github.com/daandejongen/hystar/},   }"},{"path":"https://daandejongen.github.io/hystar/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Fit the Hysteretic Threshold Autoregressive Model","text":"HysTAR model originally proposed Li, Guan, Li Yu (2015). Li, Guodong, Bo Guan, Wai Keung Li, en Philip L. H. Yu. ‘Hysteretic Autoregressive Time Series Models’. Biometrika 102, nr. 3 (september 2015): 717–23.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hystar: Fit the Hysteretic Threshold Autoregressive Model — hystar-package","title":"hystar: Fit the Hysteretic Threshold Autoregressive Model — hystar-package","text":"Estimate parameters hysteretic threshold autoregressive (HysTAR) model, using conditional least squares. addition, can generate time series data HysTAR model. details, see Li, Guan, Li Yu (2015) doi:10.1093/biomet/asv017 .","code":""},{"path":[]},{"path":"https://daandejongen.github.io/hystar/reference/hystar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hystar: Fit the Hysteretic Threshold Autoregressive Model — hystar-package","text":"Maintainer: Daan de Jong daandejong94@gmail.com (ORCID) [copyright holder] contributors: European Research Council [funder]","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"Estimate parameters hysteretic threshold autoregressive (HysTAR) model.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"","code":"hystar_fit(   data,   r = c(0.1, 0.9),   d = 0L,   p0 = 1L,   p1 = 1L,   p_select = \"bic\",   thin = FALSE,   tar = FALSE )"},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"data vector, matrix data.frame containing outcome variable \\(y\\) first column threshold variable \\(z\\) second. columns ignored. vector, taken outcome control variable, , case, self-exciting HysTAR fitted. r vector matrix search values \\(\\hat{r}_0, \\hat{r}_1\\). Defaults c(.1, .9). vector r must contain two values \\(\\) \\(b\\) \\([0, 1]\\). search space thresholds observed values z \\(100a\\%\\) \\(100b\\%\\) percentiles. matrix r allows custom search. must two columns, row represents pair \\(r_0 \\le r_1\\) test. can use matrix one row want estimate thresholds. Note values matrix scale z. d numeric vector one values search space delay parameter. Defaults 1. Typically, d large, reasonable search space might 0, 1, 2, ..., 5. p0 numeric vector one values search space autoregressive order Regime 0. Defaults 1. p1 p0, regime 1. Note need equal p0. p_select information criterion minimized select orders \\(p_0\\) \\(p_1\\). Choices: \"aic\" (Akaike Information Criterion) \"aicc\" (Corrected Akaike Information Criterion) \"bic\" (default, Bayesian Information Criterion) thin TRUE (default) FALSE. relevant r vector. TRUE (default), search space thresholds \\(100a\\%, 100(+0.01)\\%, \\dots, 100b\\%\\) percentiles z. drastically reduces computation costs keeping reasonably large search space thresholds. Note purely practical choice theoretical justification. FALSE, observed unique values z \\(100a\\%\\) \\(100b\\%\\) percentiles z considered. tar TRUE FALSE (default). Choose TRUE want fit traditional 2-regime threshold autoregressive (TAR) model. model, one threshold (equivalently, HysTAR model \\(r_0 = r_1\\)).","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"object S3 class hystar_fit, list containing following items: $data. data.frame containing y, outcome variable z, threshold variable H, logical vector indicates time points hysteresis effect happening. Note vector starts NA(s), since values can predicted HysTAR model. See Details. R, regime indicator vector. (Also starts NA(s).) $residuals. Also accessible residuals() S3 method. $coefficients, vector estimated coefficients. coef() S3 method, coefficients represented matrix. Use confint() method get confidence intervals estimates. $delay, scalar estimate delay parameter. $thresholds, vector estimates thresholds. $orders, vector estimates orders. $resvar, vector estimates residual variances. $rss, minimized residual sum squares. $ic, vector aic, corrected aic bic. $n, vector total effective observations effective obeservations regime 0 regime 1. $eff, vector time indicators effective observations. $equiv, matrix containing equivalent estimates delay thresholds, .e., estimates imply exactly regime indicator vector, result minimal residual sum squares. $r_search, vector \\(r\\)-values considered. $tar, Logical: TRUE TAR model fitted. Implemented generics hystar_fit class: plot() plots z variable y variable one another. Shading background visualizes regimes. Thresholds drawn horizontal lines z plot. can provide regime_names (char vector 2), main (char vector 1), xlab (char vector 1) ylab (char vector 2). summary(), also provides p-values standard errors estimates coefficients. print() prints estimates within mathematical representation model. Note scalar multiplied e[t] standard deviation residuals, variance. See also model definition . coef() confint() residuals() fitted() nobs()","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"regime 0, \\(y_{t}\\) predicted values \\(y_{t - p_0}\\). implies first \\(p_0\\) time points can predicted. E.g., \\(p_0 = 2\\), \\(y_1\\) miss value \\(y_{-1}\\). Similarly, value delay parameter implies regime unknown first \\(d\\) time points. ensure data used options d, p0 p1, first max(d, p0, p1) observations discarded estimation parameters.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"the-hystar-model","dir":"Reference","previous_headings":"","what":"The HysTAR model","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"HysTAR model defined : \\( y_t = \\begin{cases} \\phi_{00} + \\phi_{01} y_{t-1} + \\cdots +   \\phi_{0 p_0} y_{t-p_0} + \\sigma_{0} \\epsilon_{t} \\quad \\mathrm{}~R_{t} = 0 \\\\   \\phi_{10} + \\phi_{11} y_{t-1} + \\cdots + \\phi_{1 p_1} y_{t-p_1} + \\sigma_{1} \\epsilon_{t}   \\quad \\mathrm{}~R_{t} = 1, \\\\ \\end{cases} \\) \\( R_t = \\begin{cases} 0 \\quad \\quad \\mathrm{} \\, z_{t-d} \\(-\\infty, r_{0}] \\\\   R_{t-1} \\quad \\mathrm{} \\, z_{t-d} \\(r_0, r_1] \\\\ 1 \\quad \\quad \\mathrm{} \\, z_{t-d}   \\(r_1, \\infty), \\\\ \\end{cases} \\) \\(p_j\\) denotes order regime \\(j \\\\{0,1\\}\\) coefficients \\(\\phi_{j0}, \\dots, \\phi_{j p_j \\(-1, 1)}\\), \\(\\sigma_{j}\\) standard deviation residuals, \\(d \\  \\{0, 1, 2, \\dots\\}\\) delay parameter. parameters primary interest thresholds \\(r_0 \\le r_1\\). let \\(t = 0, 1, 2, ..., T\\), \\(T\\) number observations.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"Li, Guodong, Bo Guan, Wai Keung Li, en Philip L. H. Yu. ‘Hysteretic Autoregressive Time Series Models’. Biometrika 102, nr. 3 (september 2015): 717–23. Zhu, Ke, Philip L H Yu, en Wai Keung Li. ‘Testing Buffered Autoregressive Process’. Munich Personal RePEc Archive, (november 2013).","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"Daan de Jong.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the HysTAR model using conditional least squares estimation — hystar_fit","text":"","code":"z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1) sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1) fit <- hystar_fit(sim$data)"},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from the HysTAR model — hystar_sim","title":"Simulate data from the HysTAR model — hystar_sim","text":"function, can simulate observations HysTAR model, given parameter values.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from the HysTAR model — hystar_sim","text":"","code":"hystar_sim(z, r, d, phi_R0, phi_R1, resvar = c(1, 1), start_regime = NULL)"},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from the HysTAR model — hystar_sim","text":"z numeric vector representing observed threshold variable. can simulate z z_sim(). Can missing values. r numeric vector length 2, representing threshold values \\(r_0\\) \\(r_1\\). values must inside range z, , larger min(z) smaller max(z). Otherwise, one regime active might well simulate AR process, e.g. arima.sim(). simulated z z_sim() start_hyst = TRUE, make sure set threshold values around middle range z, otherwise, start hysteretic. d positive whole number representing value delay parameter. must smaller length(z). phi_R0 vector containing constant autoregressive parameters \\((\\phi_0^{(0)}, \\phi_1^{(0)}, \\dots, \\phi_{p_0}^{(0)})\\) Regime 0. Note first value vector always interpreted constant, AR(1) process constant, must use phi_R0 = c(0, .5), example. orders must smaller length(z). valid standard errors estimates hystar_fit(), coefficients imply y stationary, see Details. phi_R1 phi_R0, Regime 1. resvar numeric vector length 2 representing variances residuals \\(\\sigma_{(0)}^2\\) \\(\\sigma_{(1)}^2\\). residuals sampled normal distribution current implementation, note model defined ..d. vector residuals zero mean finite variance. start_regime Optionally, 0 1 indicates regime first, case z variable starts hysteresis zone. necessary use '' z variable z starts hysteresis zone. vector z simulated z_sim() contain information start hysteretic starting regime supposed (attributes() z).","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from the HysTAR model — hystar_sim","text":"list class hystar_sim elements $data, data.frame length(z) rows 4 columns: y, outcome variable z, threshold variable H, logical vector indicates time points hysteresis effect happening. Note vector starts NA(s), since first \\(d\\) time points values observed \\(z_{t-d}\\). R, regime indicator vector. $thresholds, numeric vector two threshold values, $d, delay parameter, $phi, numeric vector containing coefficients. names phi_R1_2 represents \\(\\phi_{2}^{(1)}\\), second lag autoregressive coefficient Regime 1, $orders, numeric vector containing two orders, $resvar, numeric vector residual variances regimes. Implemented generics hystar_sim class: plot() plots z variable y variable one another. Shading background visualizes regimes. Thresholds drawn horizontal lines z plot. can provide regime_names (char vector 2), main (char vector 1), xlab (char vector 1) ylab (char vector 2). summary() gives overview true parameter values used. print() prints parameter values within mathematical representation model. Note scalar multiplied e[t] standard deviation residuals, variance. See also model definition .","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate data from the HysTAR model — hystar_sim","text":"details: simulate y, 50 burn-samples according starting regime used. coefficients imply stationary process \\(y_t\\) \\(\\sum_{=1}^{p_0} \\phi_i^{(0)} < 1\\) \\(\\sum_{=1}^{p_1} \\phi_i^{(1)} < 1\\). See Zhu, Yu Li (2013), p5.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"the-hystar-model","dir":"Reference","previous_headings":"","what":"The HysTAR model","title":"Simulate data from the HysTAR model — hystar_sim","text":"HysTAR model defined : \\( y_t = \\begin{cases} \\phi_{00} + \\phi_{01} y_{t-1} + \\cdots +   \\phi_{0 p_0} y_{t-p_0} + \\sigma_{0} \\epsilon_{t} \\quad \\mathrm{}~R_{t} = 0 \\\\   \\phi_{10} + \\phi_{11} y_{t-1} + \\cdots + \\phi_{1 p_1} y_{t-p_1} + \\sigma_{1} \\epsilon_{t}   \\quad \\mathrm{}~R_{t} = 1, \\\\ \\end{cases} \\) \\( R_t = \\begin{cases} 0 \\quad \\quad \\mathrm{} \\, z_{t-d} \\(-\\infty, r_{0}] \\\\   R_{t-1} \\quad \\mathrm{} \\, z_{t-d} \\(r_0, r_1] \\\\ 1 \\quad \\quad \\mathrm{} \\, z_{t-d}   \\(r_1, \\infty), \\\\ \\end{cases} \\) \\(p_j\\) denotes order regime \\(j \\\\{0,1\\}\\) coefficients \\(\\phi_{j0}, \\dots, \\phi_{j p_j \\(-1, 1)}\\), \\(\\sigma_{j}\\) standard deviation residuals, \\(d \\  \\{0, 1, 2, \\dots\\}\\) delay parameter. parameters primary interest thresholds \\(r_0 \\le r_1\\). let \\(t = 0, 1, 2, ..., T\\), \\(T\\) number observations.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate data from the HysTAR model — hystar_sim","text":"Li, Guodong, Bo Guan, Wai Keung Li, en Philip L. H. Yu. ‘Hysteretic Autoregressive Time Series Models’. Biometrika 102, nr. 3 (september 2015): 717–23. Zhu, Ke, Philip L H Yu, en Wai Keung Li. ‘Testing Buffered Autoregressive Process’. Munich Personal RePEc Archive, (november 2013).","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate data from the HysTAR model — hystar_sim","text":"Daan de Jong.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/hystar_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data from the HysTAR model — hystar_sim","text":"","code":"z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1) sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1) fit <- hystar_fit(sim$data)"},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate the threshold/control variable Z — z_sim","title":"Simulate the threshold/control variable Z — z_sim","text":"function can use simulate time series data threshold variable HysTAR model. time series (co)sine wave, thresholds crossed predictable way. function designed used combination hystar_sim().","code":""},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate the threshold/control variable Z — z_sim","text":"","code":"z_sim(n_t, n_switches, start_regime = 0, start_hyst = FALSE, range = c(-1, 1))"},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate the threshold/control variable Z — z_sim","text":"n_t desired length simulated time series z. actual vector returned contain 10 time points, see Details. Note n_t also length y, feed z hystar_sim. n_switches scalar indicating desired number regime switches. Basically, number times variable moves (reaches) minimum maximum. thresholds within range z, , guarantee number regime switches delay parameter HysTAR model greater equal highest order. See Details. start_regime starting regime HysTAR model, 0 (default) 1. start_hyst Logical, z start hysteresis zone? course, also depends r, r yet specified function. Rather, setting start_hyst TRUE makes z start middle range, makes easy set threshold values \"around\" first values z. range numeric vector length 2 indicating desired range (min, max) z.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate the threshold/control variable Z — z_sim","text":"numeric vector length n_t. vector two attributes \"start_regime\" \"start_hyst\" corresponding values provided. attributes used hystar_sim().","code":""},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate the threshold/control variable Z — z_sim","text":"first value y can predicted HysTAR model time point \\(\\max\\{d, p\\} + 1\\), \\(p = \\max\\{p_0, p_1\\}\\). need observe \\(y_{t - p}\\) \\(z_{t - d}\\). first observed value z determines regime time point \\(\\max\\{d, p\\} + 1 - d\\). make sure time point corresponds start request, z_sim() starts 10 extra time points. way, hystar_sim can select appropriate time points, based d p0, p1.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"the-hystar-model","dir":"Reference","previous_headings":"","what":"The HysTAR model","title":"Simulate the threshold/control variable Z — z_sim","text":"HysTAR model defined : \\( y_t = \\begin{cases} \\phi_{00} + \\phi_{01} y_{t-1} + \\cdots +   \\phi_{0 p_0} y_{t-p_0} + \\sigma_{0} \\epsilon_{t} \\quad \\mathrm{}~R_{t} = 0 \\\\   \\phi_{10} + \\phi_{11} y_{t-1} + \\cdots + \\phi_{1 p_1} y_{t-p_1} + \\sigma_{1} \\epsilon_{t}   \\quad \\mathrm{}~R_{t} = 1, \\\\ \\end{cases} \\) \\( R_t = \\begin{cases} 0 \\quad \\quad \\mathrm{} \\, z_{t-d} \\(-\\infty, r_{0}] \\\\   R_{t-1} \\quad \\mathrm{} \\, z_{t-d} \\(r_0, r_1] \\\\ 1 \\quad \\quad \\mathrm{} \\, z_{t-d}   \\(r_1, \\infty), \\\\ \\end{cases} \\) \\(p_j\\) denotes order regime \\(j \\\\{0,1\\}\\) coefficients \\(\\phi_{j0}, \\dots, \\phi_{j p_j \\(-1, 1)}\\), \\(\\sigma_{j}\\) standard deviation residuals, \\(d \\  \\{0, 1, 2, \\dots\\}\\) delay parameter. parameters primary interest thresholds \\(r_0 \\le r_1\\). let \\(t = 0, 1, 2, ..., T\\), \\(T\\) number observations.","code":""},{"path":"https://daandejongen.github.io/hystar/reference/z_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate the threshold/control variable Z — z_sim","text":"","code":"z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1) sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1) fit <- hystar_fit(sim$data)"}]
