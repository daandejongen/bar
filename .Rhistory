y <- numeric(200)
y[1] <- 0
for (t in 2:200) y[t] <- -.9 * y[t-1] + rnorm(1)
ts.plot(y)
hist(y)
ts.plot(y)
for (t in 2:200) y[t] <- -.9 * y[t-1] + rnorm(.1)
y[1] <- 0
for (t in 2:200) y[t] <- -.9 * y[t-1] + rnorm(.1)
for (t in 2:200) y[t] <- -.9 * y[t-1] + rnorm(1, 0, .1)
ts.plot(y)
hist(y)
4 %/% 2
4 %% 2
for (t in 2:200) {
y[t] <- if (t %% 2 == 0) rnorm(1, 0, 1) else rnorm(1, 1, 1)
}
ts.plot(y)
y[t] <- if (t %% 2 == 0) rnorm(1, 0, .3) else rnorm(1, 1, .3)
ts.plot(y)
hist(y)
y[t] <- if (t %% 2 == 0) rnorm(1, -2, .3) else rnorm(1, 2, .3)
for (t in 2:200) {
y[t] <- if (t %% 2 == 0) rnorm(1, -2, .3) else rnorm(1, 2, .3)
}
ts.plot(y)
hist(y)
library(usethis)
use_build_ignore()
devtools::install()
check()
devtools::check()
devtools::check()
devtools::load_all(".")
devtools::check()
devtools::check()
devtools::load_all(".")
devtools::check()
install()
library(devtools)
install()
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1))
devtools::load_all(".")
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1))
devtools::load_all(".")
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1))
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1), n_t = 100, n_switches = 4)
devtools::load_all(".")
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1), n_t = 100, n_switches = 4)
devtools::load_all(".")
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1), n_t = 100, n_switches = 4, start_regime = 1)
devtools::load_all(".")
hystar_sim(r = c(0, 1), d = 1, phi_R0 = 0, phi_R1 = 1, resvar = c(1, 1), n_t = 100, n_switches = 4, start_regime = 1)
ts_reg(H = c(0, 1, 1, 1))
devtools::load_all(".")
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
devtools::load_all(".")
?inline
Rcpp::compileAttributes()
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
usethis::use_rcpp()
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
devtools::load_all(".")
ts_reg(H = c(0, 1, 1, 1))
install()
devtools::load_all(".")
devtools::load_all(".")
library(devtools)
devtools::load_all(".")
hystar_sim(r = r_sim[2, ],
d = d_sim,
phi_R0 = phis[2, 1:2],
phi_R1 = phis[2, 3:4],
resvar = c(1, 1),
n_t = nTs[2],
start_regime = 0
)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0)
devtools::load_all(".")
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0)
devtools::load_all(".")
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
devtools::load_all(".")
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = 1,
phi_R1 = 1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = .1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = .1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
devtools::load_all(".")
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = .1,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
devtools::load_all(".")
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = NULL,
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = c(),
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
numeric(0)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = numeric(0),
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
hystar_sim(r = c(0,1),
d = 1,
phi_R0 = .1,
phi_R1 = c(.3, .3),
resvar = c(1, 1),
n_t = 100,
start_regime = 0, n_switches = 3)
install()
install()
devtools::load_all(".")
?hystar_sim
sim <- hystar_sim(r = c(0, 1), d = 1,
phi_R0 = c(0, .1), phi_R1 = c(0, .5),
resvar = c(1, 1),
n_t = 100, n_switches = 4, start_regime = 1)
fit <- hystar_fit(y = sim$dat$y, z = sim$data$z)
install()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
document()
getwd()
?detch
?detach
search()
getwd()
setwd("~/Archief/PhD archief/Consultation forms/20221026/Valerie kremer")
library(lavaan)
library(readxl)
model1 <- " f1 =~ SE1 + SE2 + SE3 + SE4 + SE5 + SE6 + SE7 + SE8 +
SE9 + SE10 + SE11 + SE12 + SE13 + SE14"
items <- c("SE1","SE2","SE3","SE4","SE5","SE6","SE7",
"SE8","SE9","SE10","SE11","SE12","SE13","SE14")
data <- read_excel("databestand_bewerkt_thesis.xlsx")
outcome_vars <- as.matrix(data[, items])
outcome_vars
n_levels <- apply(outcome_vars, MARGIN = 2,
FUN = function(x) length(unique(x)))
n_levels
fit1 <- cfa(model = model1,
data = data,
ordered = items,
std.lv = TRUE)
summary(fit1, fit.measures = TRUE)
<- apply(outcome_vars, MARGIN = 2,
FUN = function(x) length(unique(x)))
n_levels
fit2 <- cfa(model = model1,
data = data,
std.lv = TRUE)
summary(fit2, fit.measures = TRUE)
?cfa
?cfa
fit2 <- cfa(model = model1,
data = data,
std.lv = TRUE,
std.ov = TRUE)
summary(fit2, fit.measures = TRUE)
model2 <- "
f1 =~ mastery1 + mastery2 + mastery3 + mastery4 + mastery5
f2 =~ perfapp1 + perfapp2 + perfapp3 + perfapp4 + perfapp5
f3 =~ perfavoi1 + perfavoi2 + perfavoi3 + perfavoi4"
items<-c("mastery1","mastery2","mastery3","mastery4","mastery5","perfapp1","perfapp2","perfapp3","perfapp4","perfapp5","perfavoi1","perfavoi2","perfavoi3","perfavoi4")
fit2 <- cfa(model = model2, data = data, ordered, std.lv = TRUE)
fit2 <- cfa(model = model2,
data = data, std.lv = TRUE)
summary(fit2, fit.measures = TRUE)
data_items <- as.matrix(data[items])
data_items
data[2, 5]
data[, 5]
data[4, ]
data["mastery1"]
data[c("mastery1", "mastery3")]
data_items
length(items)
1:14
n_items <- numeric(length(items))
n_items
unique(data_items[, 1])
for (i in 1:length(items)) {
u <- unique(data_items[, i])
n_items[i] <- length(u)
}
n_items
fit2 <- cfa(model = model2,
data = data,
ordered = items,
std.lv = TRUE)
items
fit2 <- cfa(model = model2,
data = data,
std.lv = TRUE)
summary(fit2, fit.measures = TRUE)
model3 <- "
f1 =~ dfbedr1 + dfbedr2 + dfbedr3 + dfbedr4 + dfbedr5 + dfbedr6 + dfuitd1 + dfuitd2 + dfuitd3 + dfuitd4 + dfuitd5 + dfuitd6"
items <- c("dfbedr1","dfbedr2","dfbedr3","dfbedr4","dfbedr5","dfbedr6","dfuitd1","dfuitd2","dfuitd3","dfuitd4","dfuitd5","dfuitd6")
fit3 <- cfa(model = model3, data = databestand_bewerkt_thesis, ordered = items, std.lv = TRUE)
fit3 <- cfa(model = model3, data = data, ordered = items, std.lv = TRUE)
fit3 <- cfa(model = model3, data = data, std.lv = TRUE)
summary(fit3, fit.measures = TRUE)
model4 <- "
f1 =~ pfbedr1 + pfbedr2 + pfbedr3 + pfbedr4 + pfbedr5 + pfbedr6 + pfuitd1 + pfuitd2 + pfuitd3 + pfuitd4 + pfuitd5 + pfuitd6"
items<-c("pfbedr1","pfbedr2","pfbedr3","pfbedr4","pfbedr5","pfbedr6","pfuitd1","pfuitd2","pfuitd3","pfuitd4","pfuitd5","pfuitd6")
fit4 <- cfa(model = model4, data = data, std.lv = TRUE)
summary(fit4, fit.measures = TRUE)
modindices(fit3)
library(devtools)
check()
traceback()
check()
check()
check()
check()
check()
document()
document()
document()
document()
check()
document()
match.arg("a", "A")
?match.arg
lower("AA")
?tolower
document()
?hystar_fit
x <- c(50, 100, 200, 500)
y <- choose(x, 2)
y
?seq
devtools::load_all(".")
z <- z_sim(start_regime = 1, n_switches = 4, n_t = 1000,
form = "s", scale = c(-1, 1))
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 1,
phi_R0 = c(0, .4), phi_R1 = c(1, .3), resvar = c(1, 1),
start_regime = 1)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z)
devtools::load_all(".")
fit <- hystar_fit(y = sim$data$y, z = sim$data$z)
nrow(fit$data)
z
lenghth(unique(z))
length(unique(z))
length(seq(.1, .9, by = .01))
fit2 <- hystar_fit(y = sim$data$y, z = sim$data$z, thin = FALSE)
90000/1.6
summary(fit)
summary(fit2)
all(fit$data$R == fit2$data$R)
mean(fit$data$R == fit2$data$R)
sum(fit$data$R == fit2$data$R)
all(fit$data$R[-1] == fit2$data$R[-1])
sum(fit$data$R[-1] == fit2$data$R[-1])
sum(fit$data$R[-1] == sim$data$R[-1])
sum(fit2$data$R[-1] == sim$data$R[-1])
length(seq(.1, .9, .01))
choose(81, 2)
unique(z)
length(unique(z))
choose(899, 2)
choose(81, 2)
403651/3240
?data.frame
?hystar_fit
document()
library(devtools)
document()
?hystar_fit
document()
?hystar_fit
str(fit)
residuals(fit)
fit$coefficients
coef(fit)
document()
?hystar_fit
nobs(fit)
document()
hystar_fit()
?hystar_fit
document()
?hystar_fit
install()
check()
z <- z_sim(start_regime = 1, n_switches = 4, n_t = 1000,
form = "s", scale = c(-1, 1))
devtools::load_all(".")
z <- z_sim(start_regime = 1, n_switches = 4, n_t = 1000,
form = "s", scale = c(-1, 1))
plot(fit$data)
fit
fit$data
plot(fit$data)
library(sloop)
s3_dispatch(plot(fit$data))
class(fit$data)
str(fit$data)
devtools::load_all(".")
detach("package:hystar", unload=TRUE)
?detach
search()
devtools::load_all(".")
library(devtools)
devtools::load_all(".")
z <- z_sim(start_regime = 1, n_switches = 4, n_t = 1000,
form = "s", scale = c(-1, 1))
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 1,
phi_R0 = c(0, .4), phi_R1 = c(1, .3), resvar = c(1, 1),
start_regime = 1)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z)
plot(fit$data)
str(fit$data)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z, d = 5)
plot(fit$data)
z <- z_sim(start_regime = 1, n_switches = 4, n_t = 200,
form = "s", scale = c(-1, 1))
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 1,
phi_R0 = c(0, .4), phi_R1 = c(1, .3), resvar = c(1, 1),
start_regime = 1)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z, d = 5)
plot(fit$data)
head(fit$data)
tail(fit$data)
fit$thresholds
fit <- hystar_fit(y = sim$data$y, z = sim$data$z, d = 0)
plot(fit$data)
str(fit$data)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z, d = 2)
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
?legend
devtools::load_all(".")
?legend
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
devtools::load_all(".")
plot(fit$data)
plot(sim$data)
plot(fit$data)
fit <- hystar_fit(y = sim$data$y, z = sim$data$z, d = 5)
plot(fit$data)
arima
?arima
arma
?arima.sim
arima.sim
x <- arima.sim(n = 50, list(ar = c(0, .5)))
length(x)
?Mod
?polyroot
?arima.sim
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
lag_obs(1:10, 5, 2)
lag_obs(1:10, 5, 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
?seq_along
seq_len(4)
seq_len(0)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
devtools::load_all(".")
create_burn_in(10, c(0, .4), 1)
a <- 1:20
a[-c(1:5)]
a[-(1:5)]
devtools::load_all(".")
y <- y_sim(R = rep(0, times = 50), c(0, .5), c(0, .9), c(1, 1))
devtools::load_all(".")
y <- y_sim(R = rep(0, times = 50), c(0, .5), c(0, .9), c(1, 1))
devtools::load_all(".")
y <- y_sim(R = rep(0, times = 50), c(0, .5), c(0, .9), c(1, 1))
devtools::load_all(".")
devtools::load_all(".")
y <- y_sim(R = rep(0, times = 50), c(0, .5), c(0, .9), c(1, 1))
ts.plot(y)
y <- y_sim(R = rep(0, times = 500), c(0, .5), c(0, .9), c(1, 1))
y <- y_sim(R = rep(0, times = 500), c(0, .5), c(0, .9), c(1, 1))
ts.plot(y)
seq.int
?seq.int
seq.int(1, 0)
y <- y_sim(R = c(rep(0, times = 200), rep(1, 200), c(0, .5), c(0, .9), c(1, 1))
)
y <- y_sim(R = c(rep(0, times = 200), rep(1, 200)), c(0, .5), c(0, .9), c(1, 1))
ts.plot(y)
y <- y_sim(R = c(rep(0, times = 200), rep(1, 200)), c(0, .5), c(0, .9), c(1, 1))
ts.plot(y)
?hystar
?hystar_fit
check()
