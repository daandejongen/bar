devtools::load_all(".")
fit <- hystar_fit(y = s$data$y, z = s$data$z,
r = matrix(c(-.3, -.3,
-.2, .1), nrow = 2, byrow = TRUE),
d = 0, p0 = 1, p1 = 1, tar = TRUE)
fit <- hystar_fit(y = s$data$y, z = s$data$z,
r = matrix(c(-.3, -.3,
-.2, -.2), nrow = 2, byrow = TRUE),
d = 0, p0 = 1, p1 = 1, tar = TRUE)
fit <- hystar_fit(y = s$data$y, z = s$data$z,
r = matrix(c(-.3, -.3,
-.2, -.2), nrow = 2, byrow = TRUE),
d = 0, p0 = 1, p1 = 1, tar = TRUE)
devtools::load_all(".")
fit <- hystar_fit(y = s$data$y, z = s$data$z,
r = matrix(c(-.3, -.3,
-.2, -.2), nrow = 2, byrow = TRUE),
d = 0, p0 = 1, p1 = 1, tar = TRUE)
s
devtools::load_all(".")
devtools::load_all(".")
fit <- hystar_fit(y = s$data$y, z = s$data$z,
r = matrix(c(-.3, -.3,
-.2, -.2), nrow = 2, byrow = TRUE),
d = 0, p0 = 1, p1 = 1, tar = TRUE)
fit2 <- hystar_fit(y = s$data$y, z = s$data$z,
d = 0, p0 = 1, p1 = 1, tar = FALSE)
fit
summary(fit)
devtools::load_all(".")
summary(fit)
fit2 <- hystar_fit(y = s$data$y, z = s$data$z,
d = 0, p0 = 1, p1 = 1, tar = FALSE)
summary(fit)
summary(fit2)
devtools::load_all(".")
summary(fit2)
coef(fit)
devtools::load_all(".")
plot(fit)
plot(fit2)
check()
hystar_sim(z = 1:10, r = c(2, 2), d = 1,
phi_R0 = 1, phi_R1 = 2
)
s
s <- hystar_sim(z = z, r = c(-.5, .5), d = 0,
phi_R0 = c(0, .5), phi_R1 = c(2, -.3))
plot(s)
summary(s)
s <- hystar_sim(z = z, r = c(-.5, -.5), d = 0,
phi_R0 = c(0, .5), phi_R1 = c(2, -.3))
devtools::load_all(".")
s
s <- hystar_sim(z = z, r = c(-.5, -.5), d = 0,
phi_R0 = c(0, .5), phi_R1 = c(2, -.3))
plot(s)
s
test()
test_coverage()
check()
install()
plot(s, main = "lalala")
plot(s, main = "lalala")
plot(s)
devtools::load_all(".")
library(devtools)
devtools::load_all(".")
z <- z_sim(500, 3, 1)
s <- hystar_sim(z = z, r = c(-.5, -.5), d = 0,
phi_R0 = c(0, .5), phi_R1 = c(2, -.3))
plot(s)
plot(s, main = "lalala")
devtools::load_all(".")
plot(s)
devtools::load_all(".")
plot(s)
plot(s, main = "lala")
plot(s)
devtools::load_all(".")
plot(s)
plot(s, main = "lalala")
check()
install()
library(devtools)
devtools::load_all(".")
libary(covr)
library(covr)
package_coverage()
?hystar
?hystar_fit
sysfonts::font_add_google("Zilla Slab", "pf", regular.wt = 500)
library(sysfonts)
install.packages("sysfonts")
library(devtools)
z <- z_sim(100, 4)
devtools::load_all(".")
z <- z_sim(100, 4)
s <- hystar_sim(z = z, r = c(-.5, .5), d = 0, phi_R0 = 2, phi_R1 = 1)
fit <- hystar_fit(s$data)
plot(fit)
z <- z_sim(100, 4)
s <- hystar_sim(z = z, r = c(-.5, .5), d = 0, phi_R0 = 2, phi_R1 = 1)
fit <- hystar_fit(s$data)
plot(fit)
s <- hystar_sim(z = z, r = c(-.5, .5), d = 0, phi_R0 = -1, phi_R1 = 3)
fit <- hystar_fit(s$data)
plot(fit)
head(s$data)
hystar_fit()
hystar_fit(1:100)
plot(hystar_fit(1:100))
hystar_fit(NA)
hystar_fit("test")
hystar_fit(list(daan = 3))
is.vector(list())
library(devtools)
install()
devtools::load_all(".")
devtools::document()
?binom
?rbinom
1-250*999/1000
1-(250*999/1000)
250*999/1000
1-(250**(999/1000))
1-(250^(999/1000))
250^(999/1000)
999/1000
250^.999
.999*.999
1 - .999 ^ 250
citation(package = "hystar")
qnorm(.975, mean = 0, sd = 1)
usethis::use_pkgdown()
pkgdown::build_site()
packageVersion("hystar")
usethis::use_version()
devtools::load_all(".")
?hystar_fit
z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1)
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1)
fit <- hystar_fit(sim$data)
devtools::load_all(".")
fit <- hystar_fit(sim$data)
head(sim$data)
plot(sim)
fit <- hystar_fit(sim$data)
devtools::load_all(".")
fit <- hystar_fit(sim$data)
fit$st_errors
devtools::load_all(".")
fit <- hystar_fit(sim$data)
fit$st_errors
devtools::load_all(".")
fit <- hystar_fit(sim$data)
fit$st_errors
confint(fit)
coef(fit)
usethis::use_version()
?do.call
check()
devtools::check()
devtools::load_all(".")
fit
fit$tar
?mapply
?identity
devtools::load_all(".")
y <- rnorm(100)
R <- c(rep(0, 50), rep(1, 50)
)
rv <- c(1, 1)
X <- matrix(c(rep(1, 99), y[1:99]), ncol = 2)
solve(t(X) %*% X)
X <- cbind(matrix(c(rep(1, 99), y[1:99]), ncol = 2) * (1-R), matrix(c(rep(1, 99), y[1:99]), ncol = 2) * R)
matrix(c(rep(1, 99), y[1:99]), ncol = 2)
matrix(c(rep(1, 99), y[1:99]), ncol = 2) * R
R <- matrix(c(rep(0, 50), rep(1, 50)), ncol = 2)
R
R <- matrix(c(rep(0, 50), rep(1, 50)), ncol = 2, nrow = 100)
R
X <- cbind(matrix(c(rep(1, 99), y[1:99]), ncol = 2) * (1-R), matrix(c(rep(1, 99), y[1:99]), ncol = 2) * R)
1_r
1-R
R <- matrix(c(rep(0, 49), rep(1, 50)), ncol = 2, nrow = 9)
R <- matrix(c(rep(0, 49), rep(1, 50)), ncol = 2, nrow = 99)
X <- cbind(matrix(c(rep(1, 99), y[1:99]), ncol = 2) * (1-R), matrix(c(rep(1, 99), y[1:99]), ncol = 2) * R)
X
solve(t(X) %*% X)
create_acov_mat(rnorm(100))
create_acov_mat(1:5, 1:100)
acf(y)
y
plot(y)
acf(y)
?acf
acf(y, plot = FALSE)
compute_acov_vec(y, 10)
acf(y, plot = FALSE, type = "cov")
create_acov_mat(compute_acov_vec(y, 10))
create_acov_mat(compute_acov_vec(y, 10), y)
create_acov_mat(compute_acov_vec(y, 3), y)
mean(y)
var(y)
var(y)
var(matrix(c(y, y), ncol = 2))
var(matrix(c(y[2:100], y[1:99]), ncol = 2))
devtools::load_all(".")
check()
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
check()
library(devtools)
check()
?hystar_fit
z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1)
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1)
fit <- hystar_fit(sim$data)
fit$st_errors
fit <- hystar_fit(sim$data, p0 = 2)
fit$st_errors
fit$eff
str(fit)
devtools::load_all(".")
compute_p_values(fit$coefficients, fit$st_errors)
devtools::load_all(".")
check()
devtools::load_all(".")
document()
check()
licence()
print
is.generic(print)
is.function(print)
class(print)
class(hystar.print)
class(print.hystar_fit)
devtools::load_all(".")
class(print.hystar_fit)
?UseMethod
plot
?hystar_fit
z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1)
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1)
plot(sim)
fit <- hystar_fit(sim$data)
summary(fit)
plot(fit, regime_names = c("a", "b"))
devtools::load_all(".")
warnings()
plot(fit, xlab = "test")
devtools::load_all(".")
plot(fit, xlab = "test")
plot(fit, xlab = "test", regime_names = NULL)
plot(fit_hystar,
main = "Depression time series from a network model",
xlab = "time",
zlab = "Stress",
ylab = "Depression",
show_legend = FALSE)
plot(fit,
main = "Depression time series from a network model",
xlab = "time",
zlab = "Stress",
ylab = "Depression",
show_legend = FALSE)
plot(fit, ylab = "Depression")
a <- list(b = 1, c = 2)
a[-"b"]
a["b"]
a[a != "b"]
a == b
a == "b"
?within
within(a, rm("b"))
"c" %in% a
names
names(a)
devtools::load_all(".")
plot(fit, ylab = "Depression")
devtools::load_all(".")
plot(fit, ylab = "Depression")
devtools::load_all(".")
plot(fit, ylab = "Depression")
devtools::load_all(".")
plot(fit, ylab = "Depression")
plot(fit, ylab = "Depression", zlab = "iets anders")
warnings()
devtools::load_all(".")
plot(fit, ylab = "Depression", zlab = "iets anders")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col = "red")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2)
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2)
devtools::load_all(".")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col = "black")
devtools::load_all(".")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col = "black")
devtools::load_all(".")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col = "black")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col_reg_1 = "black")
plot(fit, ylab = "Depression", zlab = "iets anders", lty = 2, col_reg1 = "black")
warnings()
plot(fit, main = "test")
devtools::load_all(".")
plot(fit, main = "test")
devtools::load_all(".")
plot(fit, main = "test")
devtools::load_all(".")
plot(fit, main = "test")
devtools::load_all(".")
plot(fit, main = "test")
devtools::load_all(".")
devtools::load_all(".")
plot(fit, main = "test")
devtools::load_all(".")
plot(fit, main = "test")
plot(fit, main = "test", show_legend = FALSE)
devtools::load_all(".")
plot(fit, main = "test", show_legend = FALSE)
str(fit)
plot(1:10)
?plot
plot(x = 4)
plot(y = 4)
plot(y = 4:8)
plot(x = 4:8)
plot.deafult
plot.default
?hystar_sim
par()
?tect
?rect
sum(is.na(sim$data$R))
plot(3)
rect(3, 3, 3, 5)
rect(3, 3, 4, 5)
plot(1:5)
rect(2, 4, 2, 4)
?rect
rect(2, 4, 2, 4, col = "blue")
rect(2, 2, 4, 4, col = "blue")
plot(1:5)
rect(2, 2, 2, 4, col = "blue")
sim$n
fit$n
par(bg = "blue")
plot(1:5)
par()
par(bg = "white")
plot(1:5)
rect(1-4*.04, 1, 5+4*.04, 5, col = "pink")
a <- list(b = 4, c = 5, d = 1)
a[["b"]]
a["b"]
a <- c(b = 4, c = 5, d = 1)
a[["b"]]
a["b"]
?segments
plot(3)
...names()
...names
?...names
?mean
mean(x = 3, x = 5)
devtools::load_all(".")
devtools::load_all(".")
plot(fit)
par()
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
plot(fit)
a
a[[2]]
a2
a[2]
devtools::load_all(".")
plot(fit)
a[[-3]]
a[-3]
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
plot(fit)
devtools::load_all(".")
plot(fit)
plot(fit, line_width_y = 4)
devtools::load_all(".")
plot(fit, line_width_y = 4)
plot(fit, line_width_y = 4, line_type_z = 4)
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3)
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe")
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe")
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", cex.main = 2)
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", cex.main = 3)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", cex.main = 3)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", cex.main = 3)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", cex.main = 3)
warnings()
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 4, color_thresholds = "blue", line_width_thresholds = 3, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE)
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(fit)
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(fit)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(9)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(2)
hoi <- par(mar = 1:4)
hoi
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(9)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(4)
plot(9)
devtools::load_all(".")
plot(fit, line_width_y = 4, line_type_z = 5, color_thresholds = "blue", line_width_thresholds = 5, main = "jaja", xlab = "zozo", ylab = "nounou", zlab = "poepoe", show_legend = FALSE, color_y = "purple", color_z = "yellow", line_width_z = 7, regimes_name_color = c("doei" = "red", "hoi" = "pink", "u" = 2))
plot(9)
test_that("switch points are correct", {
R <- c(0, 1, 1, 0, 1, 0, 0, 0, 1)
exp <- c(2, 4, 5, 6, 9)
expect_equal(get_sw_pnts(R), exp)
})
devtools::load_all(".")
test_that("switch points are correct", {
R <- c(0, 1, 1, 0, 1, 0, 0, 0, 1)
exp <- c(2, 4, 5, 6, 9)
expect_equal(get_switch_points(R), exp)
})
test_that("switch point matrix is correct. Start 1, uneven switches", {
# switch points should be 2 3 4.
R <- c(1, 0, 1, 0, 0)
exp_mat <- matrix(c(1, 2,
3, 4),
ncol = 2, byrow = TRUE)
expect_equal(get_switch_points_matrix(R), exp_mat)
})
test_that("switch point matrix is correct. Start 1, even switches", {
# switch points should be 2 3 4 5.
R <- c(1, 0, 1, 0, 1, 0)
exp_mat <- matrix(c(1, 2,
3, 4,
5, 6), # 6 is the last time point
ncol = 2, byrow = TRUE)
expect_equal(get_switch_points_matrix(R), exp_mat)
})
test_that("switch point matrix is correct. Start 0, uneven switches", {
# switch points should be 2 3 4.
R <- c(0, 1, 0, 1, 1, 1)
exp_mat <- matrix(c(2, 3,
4, 6), # 6 is the last time point
ncol = 2, byrow = TRUE)
expect_equal(get_switch_points_matrix(R), exp_mat)
})
test_that("switch point matrix is correct. Start 0, even switches", {
# switch points should be 2 3 4 5.
R <- c(0, 1, 0, 1, 0, 0)
exp_mat <- matrix(c(2, 3,
4, 5),
ncol = 2, byrow = TRUE)
expect_equal(get_switch_points_matrix(R), exp_mat)
})
test_that("plot function does not return", {
z <- z_sim(n_t = 50, n_switches = 3,
start_regime = 1, start_hyst = TRUE,
range = c(-1, 1))
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 5,
phi_R0 = c(0, .6), phi_R1 = c(1. -.3),
resvar = c(1, .9),
start_regime = 1)
fit <- hystar_fit(sim$data)
expect_equal(plot(sim), NULL)
expect_equal(plot(fit), NULL)
})
check()
devtools::check()
?graphics.off
devtools::load_all(".")
check()
devtools::check()
graphics.off()
