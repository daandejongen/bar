% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{z_sim}
\alias{z_sim}
\title{Simulate the threshold/control variable Z}
\usage{
z_sim(n_t, n_switches, start_regime, start_hyst = FALSE, range = c(-1, 1))
}
\arguments{
\item{n_t}{The length of the simulated time series of \code{z}. Note that this will also
be the length of \code{y}, when you feed \code{z} to \code{\link{hystar_sim}}}

\item{n_switches}{A scalar indicating the desired number of regime switches.
It depends on the thresholds and the delay of the HysTAR model if this number
is achieved, see Details.}

\item{start_regime}{The starting regime of the HysTAR model, 0 or 1. You must specify the
same starting regime in \code{\link{hystar_sim}}. Otherwise, \code{n_switches} may not be realized.}

\item{start_hyst}{Logical, should \code{z} start in the hysteresis zone? Of course, this also
depends on \code{r}, and \code{r} is not yet specified in this function. Rather, setting \code{start_hyst}
to \code{TRUE} makes \code{z} start at in the middle of its range, which makes it easy to
set the threshold values "around" the first values of \code{z}.}

\item{range}{A numeric vector of length 2 indicating the desired range (min, max) of \code{z}.}
}
\value{
A numeric vector of length \code{n_t}. This vector has two attributes
\code{"start_regime"} and \code{"start_hyst"} corresponding to the values you provided.
These attributes are used by \code{\link[=hystar_sim]{hystar_sim()}}.
}
\description{
This is a function you can use to simulate time series data
for a threshold variable of the HysTAR model. You could use this when you want
to simulate data from the HysTAR model, but have not observed the threshold variable.
}
\details{
The number of switches \code{n_switches} can differ ultimately based on r and d.
and if starting regime is weird (only for sine function).
Values of \code{z} will have three digits.
}
\examples{
z <- z_sim(n_t = 200, n_switches = 5, start_regime = 1)
sim <- hystar_sim(z = z, r = c(-.5, .5), d = 2, phi_R0 = c(0, .6), phi_R1 = 1,
resvar = c(1, 1))
plot(sim)
fit <- hystar_fit(y = sim$data$y, z = z)
summary(fit)
}
